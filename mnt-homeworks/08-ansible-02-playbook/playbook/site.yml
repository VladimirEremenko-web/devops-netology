---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - block:
        - name: Get clickhouse distrib
          become: true
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          become: true
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
    - name: Install clickhouse packages
      become: true
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
        disable_gpg_check: true
      notify: Start clickhouse service

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Clickhouse pause
      ansible.builtin.pause:
        seconds: 5

    - name: Create database
      become: true
      ansible.builtin.command: "clickhouse-client -q 'create database {{ clickhouse_database_name }};'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0
    - name: Create log table
      tags: clickhouse_db
      ansible.builtin.command:
        argv:
          - clickhouse-client
          - --database
          - "{{ clickhouse_database_name }}"
          - -q
          - "{{ clickhouse_create_table }}"
      register: create_table
      failed_when: create_table.rc != 0 and create_table.rc !=57
      changed_when: create_table.rc == 0

- name: Install vector
  hosts: vector
  handlers:
    - name: restart vector
      become_method: sudo
      become: true
      ansible.builtin.systemd:
        name: vector
        state: started
      when: vector_service_state != 'stopped'
    - name: reload vector
      ansible.builtin.systemd:
        name: vector
        state: restart
      when: vector_service_state != 'stopped'
  tasks:
    - name: Install | Ensure vector group
      become: true
      ansible.builtin.group:
        name: "{{ vector_group }}"
        system: yes
        state: present
    - name: Install | Ensure vector user
      become: true
      ansible.builtin.user:
        name: "{{ vector_user }}"
        group: "{{ vector_group }}"
        groups: "{{ vector_groups | default('') }}"
        system: yes
        shell: /usr/sbin/nologin
        createhome: no
    - name: Install | Ensure skeleton paths
      become: true
      ansible.builtin.file:
        dest: "{{ item }}"
        owner: "{{ vector_user }}"
        group: "{{ vector_group }}"
        state: directory
      with_items:
        - "{{ vector_skeleton_paths }}"
    - name: Install | Check that the "{{ vector_bin_path }}/{{ vector_exec_name }}" exists
      stat:
        path: "{{ vector_bin_path }}/{{ vector_exec_name }}"
      register: vector_stat_result
    - name: Install | Check vector version
      command: "{{ vector_exec_name }} --version"
      register: vector_check
      changed_when: false
      ignore_errors: true
      when: vector_stat_result.stat.exists
    - name: Install | Download package
      ansible.builtin.get_url:
        url: "{{ vector_package_name }}"
        dest: "./vector-{{ vector_version }}.rpm"
        mode: "0644"
    - name: Install | Installation vector packages
      become: true
      ansible.builtin.yum:
        name:
          - vector-{{ vector_version }}.rpm
        disable_gpg_check: true
      when: vector_force_reinstall or vector_check is failed or not vector_stat_result.stat.exists
    - name: config | Configure vector
      become: true
      ansible.builtin.template:
        src: "{{ vector_config_template_path }}"
        dest: /etc/vector/vector.toml
        owner: "{{ vector_user }}"
        group: "{{ vector_group }}"
        mode: "0640"
      notify: restart vector
    - name: Copy daemon script
      become: true
      ansible.builtin.template:
        src: "{{ vector_service_template_path }}"
        dest: /etc/systemd/system/vector.service
        mode: "0644"
        owner: root
        group: root
      notify: restart vector

    - name: Configure service
      become: true
      ansible.builtin.systemd:
        name: vector
        state: "{{ vector_service_state }}"
        enabled: "{{ vector_service_enabled }}"
        daemon_reload: yes
